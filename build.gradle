buildscript {
    ext {
        kotlinVersion = '1.3.11'
        springBootVersion = '2.1.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }

}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group 'com.nserdyuk'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.springframework.boot:spring-boot-starter-jersey"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile 'javax.persistence:javax.persistence-api'
    compile 'org.liquibase:liquibase-core'
    compile 'org.postgresql:postgresql'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile "com.hazelcast:hazelcast:3.12.3"

    testCompile("org.junit.jupiter:junit-jupiter-engine")
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testCompile("org.junit.jupiter:junit-jupiter-params")
    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude module: 'junit'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}